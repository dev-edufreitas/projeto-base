services:
  # Frontend Vue.js
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}_frontend
    ports:
      - "${FRONTEND_PORT}:3000"
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://backend:${BACKEND_PORT}/graphql
      - VITE_APP_NAME=${COMPOSE_PROJECT_NAME}
    depends_on:
      - backend
    networks:
      - projeto_network
    restart: unless-stopped

  # Backend Laravel
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}_backend
    ports:
      - "${BACKEND_PORT}:8000"
    volumes:
      - ./backend:/var/www/html
      - backend_vendor:/var/www/html/vendor
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=${POSTGRES_DB}
      - DB_USERNAME=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - postgres
    networks:
      - projeto_network
    restart: unless-stopped

  # Banco PostgreSQL
  postgres:
    image: postgres:16-alpine
    container_name: ${COMPOSE_PROJECT_NAME}_postgres
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - projeto_network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: ${COMPOSE_PROJECT_NAME}_nginx
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./backend/public:/var/www/html/public
    depends_on:
      - backend
    networks:
      - projeto_network

volumes:
  postgres_data:
    name: ${COMPOSE_PROJECT_NAME}_postgres_data
  backend_vendor:
    name: ${COMPOSE_PROJECT_NAME}_backend_vendor
  frontend_node_modules:  
    name: ${COMPOSE_PROJECT_NAME}_frontend_node_modules

networks:
  projeto_network:
    name: ${COMPOSE_PROJECT_NAME}_network
    driver: bridge